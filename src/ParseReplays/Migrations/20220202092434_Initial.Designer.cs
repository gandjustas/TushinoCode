// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tushino;

#nullable disable

namespace ParseTsgReplays.Migrations
{
    [DbContext(typeof(ReplaysContext))]
    [Migration("20220202092434_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.1");

            modelBuilder.Entity("Tushino.EnterExit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsEnter")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReplayId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Time")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UnitId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("User")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ReplayId");

                    b.ToTable("EnterExit");
                });

            modelBuilder.Entity("Tushino.Goal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPlayer")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsUnconscious")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Message")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("ReplayId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Score")
                        .HasColumnType("REAL");

                    b.Property<int>("Time")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UnitId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ReplayId");

                    b.ToTable("Goals");
                });

            modelBuilder.Entity("Tushino.Hit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ammo")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<double>("Damage")
                        .HasColumnType("REAL");

                    b.Property<double>("Distance")
                        .HasColumnType("REAL");

                    b.Property<bool>("IsUnconscious")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Magazine")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("ReplayId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ShooterId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ShooterVehicleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TargetId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Time")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Weapon")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ReplayId");

                    b.ToTable("Hits");
                });

            modelBuilder.Entity("Tushino.Kill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("KillerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReplayId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TargetId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Time")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ReplayId");

                    b.ToTable("Kills");
                });

            modelBuilder.Entity("Tushino.Medical", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Action")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsPlayer")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsUnconscious")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MedicId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PatientId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReplayId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Time")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("ReplayId");

                    b.ToTable("Medicals");
                });

            modelBuilder.Entity("Tushino.Replay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Admin")
                        .HasColumnType("TEXT");

                    b.Property<string>("CommanderEast")
                        .HasColumnType("TEXT");

                    b.Property<string>("CommanderGuer")
                        .HasColumnType("TEXT");

                    b.Property<string>("CommanderWest")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Island")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Mission")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("PlayTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Server")
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<int?>("WinnerSide")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Replays");
                });

            modelBuilder.Entity("Tushino.Unit", b =>
                {
                    b.Property<int>("ReplayId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Class")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<double>("Damage")
                        .HasColumnType("REAL");

                    b.Property<string>("Icon")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsVehicle")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Side")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Squad")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("TimeInVehicle")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TimeOfDeath")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TimeOnFoot")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int?>("VehicleOrDriverId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ReplayId", "Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("Tushino.EnterExit", b =>
                {
                    b.HasOne("Tushino.Replay", null)
                        .WithMany("Events")
                        .HasForeignKey("ReplayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Tushino.Goal", b =>
                {
                    b.HasOne("Tushino.Replay", null)
                        .WithMany("Goals")
                        .HasForeignKey("ReplayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Tushino.Hit", b =>
                {
                    b.HasOne("Tushino.Replay", null)
                        .WithMany("Hits")
                        .HasForeignKey("ReplayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Tushino.Kill", b =>
                {
                    b.HasOne("Tushino.Replay", null)
                        .WithMany("Kills")
                        .HasForeignKey("ReplayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Tushino.Medical", b =>
                {
                    b.HasOne("Tushino.Replay", null)
                        .WithMany("Medicals")
                        .HasForeignKey("ReplayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Tushino.Unit", b =>
                {
                    b.HasOne("Tushino.Replay", null)
                        .WithMany("Units")
                        .HasForeignKey("ReplayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Tushino.Replay", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Goals");

                    b.Navigation("Hits");

                    b.Navigation("Kills");

                    b.Navigation("Medicals");

                    b.Navigation("Units");
                });
#pragma warning restore 612, 618
        }
    }
}
